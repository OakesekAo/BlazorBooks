@page "/books/{bookId:int}"

@inject NavigationManager NavigationManager

@inject IBookService BookService

<PageTitle>@_book?.Title | Blazor Books</PageTitle>

<SectionContent SectionName="PageTitle">
    <h1 class="m-0 text-white fw-bold">@_book?.Title - Book Description</h1>
</SectionContent>

@if (_book is not null){
    <div class="contariner mt-5">
    <div  class="row">
        <div class="col-sm-4 d-flex flex-column aligm-items-center">
                <div class="img-fluid text-center">
                    <img src="@_book.Image" alt="@_book.Title" class="rounded" />
            </div>
            <div class="my-4">
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <th scope="row">Book Id</th>
                            <th>@_book.Id</th>
                        </tr>
                        <tr>
                            <th scope="row">Format</th>
                            <th>@_book.Format</th>
                        </tr>
                        <tr>
                            <th scope="row">No. of Pages</th>
                            <th>@_book.NumPages</th>
                        </tr>
                    </tbody>
                </table>
            </div>

            <a href="@_book.BookLink" target="_blank" class="btn btn-primary mb-5">
                @(string.IsNullOrWhiteSpace(_book.BuyLink) ? "Read More" : "Buy Now")
            </a>
        </div>
        <div class="col-sm-8">
                <h2 class="fw-bold">@_book.Title</h2>
                <h5 class="mt-3">
                    <span>by</span>
                    <a href="/author/@_book.Author.Slug/books"
                    title="Books by @_book.Author.Name"
                    class="text-secondary fw-bold">
                    @_book.Author.Name
                </a>
                </h5>
                <hr/>
                <h3 class="my-3">Description</h3>
                <p class="">
                    @_book.Description
                </p>

                <h4 class="my-3">Genres</h4>
                <div class="d-flex flex-wrap">
                    @foreach(var g in _book.Genres)
                    {
                        <a href="/?genre=@g.Slug" class="genre-tag" title="@g.Name Books">@g.Name</a>
                    }
                </div>

                <hr style="height: 5px" class="text-main" />
                <h4>Similar Books</h4>

                <div class="row">
                    @foreach(var b in _similarBooks)
                    {
                        <div class="book-block col-6 col-sm-4 mb-4">
                            <a href="/books/@b.Id" title="@b.Title">
                                <figure class="bg-main-light image-box">
                                    <img src="@b.Image" alt="@b.Title" />

                                </figure>
                                <div class="p-2">
                                    <h6 class="text-main heading text-center">@b.Title</h6>
                                </div>
                            </a>
                        </div>
                    }
                </div>
        </div>
</div>


</div>
})


@code{
    [Parameter]
    public int BookId { get; set; }

    private BookDetailDto _book;
    private BookListDto[] _similarBooks = [];

    protected override async Task OnInitializedAsync()
    {
        if (BookId <= 0)
        {
            NavigationManager.NavigateTo("/");
            return;
        }
        var similarBooksTask = BookService.GetSimilarBooksAsync(BookId, 6);
        _book = await BookService.GetBookAsync(BookId);
        _similarBooks = await similarBooksTask;

        if (_book is null)
        {
            NavigationManager.NavigateTo("/");
        }
    }

}